image: docker:latest

services:
  - docker:dind

# ---------------------------------------
# Global
# ---------------------------------------

stages:
  - build
  - test
  - release

variables:
  REGISTRY: registry.gitlab.com
  NAMESPACE: jrbeverly-docker
  PROJECT: docker-rsvg
  GIT_COMMIT: ${CI_COMMIT_SHA}
  PREFIX_TAG: ${CI_PIPELINE_ID}-
  RELEASE_IMAGE: docker.io/jrbeverly/rsvg

# ----------------------------------------
# Prescript
# ----------------------------------------

before_script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
  - apk --no-cache add make

# ----------------------------------------
# Build
# ----------------------------------------

build-baseimage:
  stage: build
  variables: 
    IMAGE_VERSION: baseimage
  script:
    - make -C build/ $IMAGE_VERSION
    - make -C build/ TAG=$IMAGE_VERSION push
  only:
    - triggers
    - /^version-.*$/
  except:
    - branches

build-privileged:
  stage: build
  variables: 
    IMAGE_VERSION: privileged
  script:
    - make -C build/ $IMAGE_VERSION
    - make -C build/ TAG=$IMAGE_VERSION push
  only:
    - triggers
    - /^version-.*$/
  except:
    - branches

# ----------------------------------------
# Tests
# ----------------------------------------

test-baseimage:
  stage: test
  variables: 
    IMAGE_VERSION: baseimage
  script:
    - make -s -C build/ TAG=$IMAGE_VERSION pull
    - make -s -C build/ TAG=$IMAGE_VERSION test
  dependencies:
    - build-baseimage
  only:
    - triggers
    - /^version-.*$/
  except:
    - branches

test-privileged:
  stage: test
  variables: 
    IMAGE_VERSION: privileged
  script:
    - make -s -C build/ TAG=$IMAGE_VERSION pull
    - make -s -C build/ TAG=$IMAGE_VERSION test
  dependencies:
    - build-privileged
  only:
    - triggers
    - /^version-.*$/
  except:
    - branches

# ----------------------------------------
# Release
# ----------------------------------------

release:
  stage: release
  script:
    - docker login -u $DOCKER_BUILD_USER -p $DOCKER_BUILD_TOKEN
    - make -C build/ TAG=baseimage pull
    - make -C build/ TAG=privileged pull
    - make -C build/ TAG=baseimage release
    - make -C build/ TAG=privileged release
  dependencies:
    - test-baseimage
    - test-privileged
  only:
    - triggers
    - /^version-.*$/
  except:
    - branches